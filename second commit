{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNt6kbQsb7Ar4Wo1t8uwnFc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mean-J/GPT_img_classifier/blob/main/Untitled22.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "ZZ198IqafRUS"
      },
      "outputs": [],
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "tf.keras.utils.set_random_seed(42)\n",
        "\n",
        "# (28,28,1) 입력에 Conv-BN-ReLU → MaxPool 2회, FC 2회\n",
        "def make_model():\n",
        "    model = keras.Sequential([\n",
        "        keras.layers.InputLayer((28,28,1)),\n",
        "        keras.layers.Conv2D(32, 3, padding='same', use_bias=True),\n",
        "        keras.layers.BatchNormalization(),\n",
        "        keras.layers.ReLU(),\n",
        "        keras.layers.MaxPooling2D(),\n",
        "        keras.layers.Conv2D(64, 3, padding='same'),\n",
        "        keras.layers.BatchNormalization(),\n",
        "        keras.layers.ReLU(),\n",
        "        keras.layers.MaxPooling2D(),\n",
        "        keras.layers.Flatten(),\n",
        "        keras.layers.Dense(100, activation='relu'),\n",
        "        keras.layers.Dropout(0.3),\n",
        "        keras.layers.Dense(10, activation='softmax')\n",
        "    ])\n",
        "    return model\n",
        "\n",
        "model = make_model()\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "conv1_w = model.layers[1].weights[0].numpy()   # 첫 Conv2D weight\n",
        "print(\"초기 가중치  mean:\", conv1_w.mean(), \"std:\", conv1_w.std())\n",
        "\n",
        "plt.hist(conv1_w.reshape(-1), bins=30)\n",
        "plt.title(\"Before training\"); plt.xlabel(\"weight\"); plt.ylabel(\"count\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "4C9LbOaofZui",
        "outputId": "245a35d4-14f1-4a7b-e994-efa65ceb79c9"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "초기 가중치  mean: 1.0 std: 0.0\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "(x_train, y_train), (x_test, y_test) = keras.datasets.fashion_mnist.load_data()\n",
        "x_train = x_train.astype(\"float32\")[..., np.newaxis] / 255.0\n",
        "x_test  = x_test.astype(\"float32\")[..., np.newaxis] / 255.0\n",
        "\n",
        "model.compile(optimizer=keras.optimizers.Adam(1e-3),\n",
        "              loss=\"sparse_categorical_crossentropy\",\n",
        "              metrics=[\"accuracy\"])\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "O5DVp1OAfcDg",
        "outputId": "e073101d-17e0-4687-fc28-7f984c42cad6"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n",
            "\u001b[1m29515/29515\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n",
            "\u001b[1m26421880/26421880\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n",
            "\u001b[1m5148/5148\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n",
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n",
            "\u001b[1m4422102/4422102\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 0us/step\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "history = model.fit(\n",
        "    x_train, y_train,\n",
        "    validation_split=0.1,\n",
        "    epochs=5,\n",
        "    batch_size=128,\n",
        "    verbose=2\n",
        ")\n",
        "_, test_acc = model.evaluate(x_test, y_test, verbose=0)\n",
        "print(\"▶︎ Test accuracy:\", round(test_acc*100, 2), \"%\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Isj7xgrwfehU",
        "outputId": "56fbcda2-712f-41ff-f8e9-39850eb00e83"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/5\n",
            "422/422 - 86s - 203ms/step - accuracy: 0.8127 - loss: 0.5273 - val_accuracy: 0.8440 - val_loss: 0.4906\n",
            "Epoch 2/5\n",
            "422/422 - 82s - 195ms/step - accuracy: 0.8729 - loss: 0.3515 - val_accuracy: 0.8887 - val_loss: 0.3063\n",
            "Epoch 3/5\n",
            "422/422 - 142s - 337ms/step - accuracy: 0.8875 - loss: 0.3072 - val_accuracy: 0.9040 - val_loss: 0.2625\n",
            "Epoch 4/5\n",
            "422/422 - 140s - 333ms/step - accuracy: 0.8994 - loss: 0.2770 - val_accuracy: 0.9095 - val_loss: 0.2511\n",
            "Epoch 5/5\n",
            "422/422 - 83s - 196ms/step - accuracy: 0.9075 - loss: 0.2524 - val_accuracy: 0.9092 - val_loss: 0.2468\n",
            "▶︎ Test accuracy: 90.2 %\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "conv1_w_trained = model.layers[1].weights[0].numpy()\n",
        "print(\"훈련 뒤  mean:\", conv1_w_trained.mean(), \"std:\", conv1_w_trained.std())\n",
        "\n",
        "plt.hist(conv1_w_trained.reshape(-1), bins=30)\n",
        "plt.title(\"After training\"); plt.xlabel(\"weight\"); plt.ylabel(\"count\")\n",
        "plt.show()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "o4HSwkzpfkZ4",
        "outputId": "4de6a1d2-c351-4baa-a143-3f2ffca37948"
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "훈련 뒤  mean: 0.9870384 std: 0.07480381\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}
